webpackJsonp([80594822561511],{"./node_modules/json-loader/index.js!./.cache/json/tr-til-how-to-loop-over-map-in-golang.json":function(n,a){n.exports={data:{markdownRemark:{fileAbsolutePath:"/home/travis/build/Necmttn/necmttn.github.io/packages/necmttn-gatsby/src/pages/til/how-to-loop-over-map-in-golang/index.tr.md",html:'<p>Golang’in icinde bulunan  <code>range</code> i kullanabilirsiniz. Ornegin ;</p>\n<html><head></head><body><div class="gatsby-highlight">\n      <pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>\n\t<span class="token string">&quot;fmt&quot;</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\tkar <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>\n\n\tkar<span class="token punctuation">[</span><span class="token string">&quot;puz&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">66</span>\n\tkar<span class="token punctuation">[</span><span class="token string">&quot;pol&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>\n\n\t<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> kar <span class="token punctuation">{</span>\n\t\tfmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;key %d = value%d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> v<span class="token punctuation">)</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div></body></html>\n<p>konsoldan bunu cikti vericektir.</p>\n<html><head></head><body><div class="gatsby-highlight">\n      <pre class="language-bash"><code>key %<span class="token operator">!</span>d<span class="token punctuation">(</span>string<span class="token operator">=</span>puz<span class="token punctuation">)</span> <span class="token operator">|</span> value 66\nkey %<span class="token operator">!</span>d<span class="token punctuation">(</span>string<span class="token operator">=</span>pol<span class="token punctuation">)</span> <span class="token operator">|</span> value 99\n\n<span class="token punctuation">[</span>Process exited 0<span class="token punctuation">]</span>\n</code></pre>\n      </div></body></html>',excerpt:"Golang’in icinde bulunan   range  i kullanabilirsiniz. Ornegin ; konsoldan bunu cikti vericektir.",frontmatter:{title:"GoLang'de Objenin keyleri maplenir ?",til:!0}}},pathContext:{path:"/tr/til/how-to-loop-over-map-in-golang/",langKey:"tr"}}}});
//# sourceMappingURL=path---tr-til-how-to-loop-over-map-in-golang-1acdb82d5cfc4ef543c9.js.map